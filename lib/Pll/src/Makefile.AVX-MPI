CC = mpicc
CFLAGS = -g -c -O2 -D_GNU_SOURCE -D__AVX -D_FINE_GRAIN_MPI -D__SSE3 -msse3 -O2 -fomit-frame-pointer -funroll-loops -Wall -Wredundant-decls  -Wreturn-type  -Wswitch-default -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int -Wimport -Wunused-label -Wno-int-to-pointer-cast -Wbad-function-cast  -Wmissing-declarations -Wmissing-prototypes  -Wnested-externs  -Wold-style-definition -Wstrict-prototypes -Wpointer-sign -Wextra -Wredundant-decls -Wunused -Wunused-function -Wunused-parameter -Wunused-value  -Wunused-variable -Wformat  -Wformat-nonliteral -Wparentheses -Wsequence-point -Wuninitialized -Wundef
ARFLAGS = rvs
TARGET = libpll
ARCH = AVX-MPI
VERSION = 1.0.0
STATICLIB = $(TARGET)-$(ARCH).a.$(VERSION)	# static library
SHAREDOBJ = $(TARGET)-$(ARCH).so.$(VERSION)	# shared object
GLOBAL_DEPS = pll.h globalVariables.h
RM = rm -f

OBJ = hash.o stack.o ssort.o queue.o utils.o randomTree.o optimizeModel.o trash.o searchAlgo.o topologies.o fastDNAparsimony.o treeIO.o models.o evaluatePartialGenericSpecial.o evaluateGenericSpecial.o newviewGenericSpecial.o makenewzGenericSpecial.o bipartitionList.o restartHashTable.o recom.o  genericParallelization.o avxLikelihood.o lexer.o alignment.o ssort.o newick.o parsePartition.o parsimony.o

all : $(STATICLIB)

$(STATICLIB) : $(OBJ)
	@echo "==> Building PLL Library ($(STATICLIB))"
	$(AR) $(ARFLAGS) $@ $+
	ln -sf $(STATICLIB) $(TARGET)-$(ARCH).a

fastDNAparsimony.o : fastDNAparsimony.c $(GLOBAL_DEPS)
	$(CC) $(CFLAGS) -mavx -c -o $@ $<

parsimony.o : parsimony.c $(GLOBAL_DEPS)
	$(CC) $(CFLAGS) -mavx -c -o $@ $<

avxLikelihood.o : avxLikelihood.c $(GLOBAL_DEPS)
	$(CC) $(CFLAGS) -mavx -c -o $@ $<

bipartitionList.o : bipartitionList.c $(GLOBAL_DEPS)
evaluatePartialSpecialGeneric.o : evaluatePartialSpecialGeneric.c $(GLOBAL_DEPS)
optimizeModel.o : optimizeModel.c $(GLOBAL_DEPS)
trash.o : trash.c $(GLOBAL_DEPS)
searchAlgo.o : searchAlgo.c $(GLOBAL_DEPS)
topologies.o : topologies.c $(GLOBAL_DEPS)
parsePartitions.o : parsePartitions.c $(GLOBAL_DEPS)
treeIO.o : treeIO.c $(GLOBAL_DEPS)
models.o : models.c $(GLOBAL_DEPS)
evaluatePartialGenericSpecial.o : evaluatePartialGenericSpecial.c $(GLOBAL_DEPS)
evaluateGenericSpecial.o : evaluateGenericSpecial.c $(GLOBAL_DEPS)
newviewGenericSpecial.o : newviewGenericSpecial.c $(GLOBAL_DEPS)
makenewzGenericSpecial.o : makenewzGenericSpecial.c $(GLOBAL_DEPS)
mesh.o : mesh.c $(GLOBAL_DEPS)
fineGrainMpi.o :  fineGrainMpi.c  $(GLOBAL_DEPS)
restartHashTable.o : restartHashTable.c $(GLOBAL_DEPS)
queue.o : queue.c $(GLOBAL_DEPS)
stack.o : stack.c $(GLOBAL_DEPS)
hash.o : hash.c $(GLOBAL_DEPS)
lexer.o : lexer.c $(GLOBAL_DEPS)
alignment.o: alignment.c $(GLOBAL_DEPS)
newick.o: newick.c $(GLOBAL_DEPS)
parsePartition.o: parsePartition.c $(GLOBAL_DEPS)
ssort.o : ssort.c $(GLOBAL_DEPS)

clean : 
	$(RM) *.o $(STATICLIB) $(SHAREDOBJ)

.PHONY: all clean
.INTERMEDIATE: $(OBJ)
